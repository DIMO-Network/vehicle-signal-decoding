// Code generated by MockGen. DO NOT EDIT.
// Source: device_definitions_service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	reflect "reflect"

	grpc "github.com/DIMO-Network/device-definitions-api/pkg/grpc"
	gomock "github.com/golang/mock/gomock"
)

// MockDeviceDefinitionsService is a mock of DeviceDefinitionsService interface.
type MockDeviceDefinitionsService struct {
	ctrl     *gomock.Controller
	recorder *MockDeviceDefinitionsServiceMockRecorder
}

// MockDeviceDefinitionsServiceMockRecorder is the mock recorder for MockDeviceDefinitionsService.
type MockDeviceDefinitionsServiceMockRecorder struct {
	mock *MockDeviceDefinitionsService
}

// NewMockDeviceDefinitionsService creates a new mock instance.
func NewMockDeviceDefinitionsService(ctrl *gomock.Controller) *MockDeviceDefinitionsService {
	mock := &MockDeviceDefinitionsService{ctrl: ctrl}
	mock.recorder = &MockDeviceDefinitionsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeviceDefinitionsService) EXPECT() *MockDeviceDefinitionsServiceMockRecorder {
	return m.recorder
}

// DecodeVIN mocks base method.
func (m *MockDeviceDefinitionsService) DecodeVIN(ctx context.Context, vin string) (*grpc.DecodeVinResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecodeVIN", ctx, vin)
	ret0, _ := ret[0].(*grpc.DecodeVinResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DecodeVIN indicates an expected call of DecodeVIN.
func (mr *MockDeviceDefinitionsServiceMockRecorder) DecodeVIN(ctx, vin interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecodeVIN", reflect.TypeOf((*MockDeviceDefinitionsService)(nil).DecodeVIN), ctx, vin)
}

// GetDeviceDefinitionByID mocks base method.
func (m *MockDeviceDefinitionsService) GetDeviceDefinitionByID(ctx context.Context, id string) (*grpc.GetDeviceDefinitionResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeviceDefinitionByID", ctx, id)
	ret0, _ := ret[0].(*grpc.GetDeviceDefinitionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeviceDefinitionByID indicates an expected call of GetDeviceDefinitionByID.
func (mr *MockDeviceDefinitionsServiceMockRecorder) GetDeviceDefinitionByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeviceDefinitionByID", reflect.TypeOf((*MockDeviceDefinitionsService)(nil).GetDeviceDefinitionByID), ctx, id)
}
