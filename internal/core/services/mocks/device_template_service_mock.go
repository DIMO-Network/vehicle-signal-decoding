// Code generated by MockGen. DO NOT EDIT.
// Source: device_template_service.go
//
// Generated by this command:
//
//	mockgen -source device_template_service.go -destination mocks/device_template_service_mock.go
//
// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	reflect "reflect"

	grpc "github.com/DIMO-Network/devices-api/pkg/grpc"
	services "github.com/DIMO-Network/vehicle-signal-decoding/internal/core/services"
	models "github.com/DIMO-Network/vehicle-signal-decoding/internal/infrastructure/db/models"
	fiber "github.com/gofiber/fiber/v2"
	gomock "go.uber.org/mock/gomock"
)

// MockDeviceTemplateService is a mock of DeviceTemplateService interface.
type MockDeviceTemplateService struct {
	ctrl     *gomock.Controller
	recorder *MockDeviceTemplateServiceMockRecorder
}

// MockDeviceTemplateServiceMockRecorder is the mock recorder for MockDeviceTemplateService.
type MockDeviceTemplateServiceMockRecorder struct {
	mock *MockDeviceTemplateService
}

// NewMockDeviceTemplateService creates a new mock instance.
func NewMockDeviceTemplateService(ctrl *gomock.Controller) *MockDeviceTemplateService {
	mock := &MockDeviceTemplateService{ctrl: ctrl}
	mock.recorder = &MockDeviceTemplateServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeviceTemplateService) EXPECT() *MockDeviceTemplateServiceMockRecorder {
	return m.recorder
}

// AssociateTemplate mocks base method.
func (m *MockDeviceTemplateService) StoreLastTemplateRequested(ctx context.Context, vin, templateDbcURL, templatePidURL, templateSettingURL, version string) (*models.DeviceTemplate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreLastTemplateRequested", ctx, vin, templateDbcURL, templatePidURL, templateSettingURL, version)
	ret0, _ := ret[0].(*models.DeviceTemplate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AssociateTemplate indicates an expected call of AssociateTemplate.
func (mr *MockDeviceTemplateServiceMockRecorder) AssociateTemplate(ctx, vin, templateDbcURL, templatePidURL, templateSettingURL, version any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreLastTemplateRequested", reflect.TypeOf((*MockDeviceTemplateService)(nil).StoreLastTemplateRequested), ctx, vin, templateDbcURL, templatePidURL, templateSettingURL, version)
}

// ResolveDeviceConfiguration mocks base method.
func (m *MockDeviceTemplateService) ResolveDeviceConfiguration(c *fiber.Ctx, ud *grpc.UserDevice) (*services.DeviceConfigResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResolveDeviceConfiguration", c, ud)
	ret0, _ := ret[0].(*services.DeviceConfigResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResolveDeviceConfiguration indicates an expected call of ResolveDeviceConfiguration.
func (mr *MockDeviceTemplateServiceMockRecorder) ResolveDeviceConfiguration(c, ud any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResolveDeviceConfiguration", reflect.TypeOf((*MockDeviceTemplateService)(nil).ResolveDeviceConfiguration), c, ud)
}
