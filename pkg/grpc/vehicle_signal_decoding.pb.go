// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: pkg/grpc/vehicle_signal_decoding.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateDBCCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DbcContents string `protobuf:"bytes,2,opt,name=dbc_contents,json=dbcContents,proto3" json:"dbc_contents,omitempty"`
}

func (x *CreateDBCCodeRequest) Reset() {
	*x = CreateDBCCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDBCCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDBCCodeRequest) ProtoMessage() {}

func (x *CreateDBCCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDBCCodeRequest.ProtoReflect.Descriptor instead.
func (*CreateDBCCodeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDBCCodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDBCCodeRequest) GetDbcContents() string {
	if x != nil {
		return x.DbcContents
	}
	return ""
}

type UpdateDBCCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DbcContents string `protobuf:"bytes,3,opt,name=dbc_contents,json=dbcContents,proto3" json:"dbc_contents,omitempty"`
}

func (x *UpdateDBCCodeRequest) Reset() {
	*x = UpdateDBCCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDBCCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDBCCodeRequest) ProtoMessage() {}

func (x *UpdateDBCCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDBCCodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateDBCCodeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateDBCCodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDBCCodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDBCCodeRequest) GetDbcContents() string {
	if x != nil {
		return x.DbcContents
	}
	return ""
}

type GetDBCCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DbcContents string                 `protobuf:"bytes,3,opt,name=dbc_contents,json=dbcContents,proto3" json:"dbc_contents,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GetDBCCodeResponse) Reset() {
	*x = GetDBCCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDBCCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDBCCodeResponse) ProtoMessage() {}

func (x *GetDBCCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDBCCodeResponse.ProtoReflect.Descriptor instead.
func (*GetDBCCodeResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{2}
}

func (x *GetDBCCodeResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDBCCodeResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDBCCodeResponse) GetDbcContents() string {
	if x != nil {
		return x.DbcContents
	}
	return ""
}

func (x *GetDBCCodeResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetDBCCodeResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetDBCCodeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetDBCCodeResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetDBCCodeListResponse) Reset() {
	*x = GetDBCCodeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDBCCodeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDBCCodeListResponse) ProtoMessage() {}

func (x *GetDBCCodeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDBCCodeListResponse.ProtoReflect.Descriptor instead.
func (*GetDBCCodeListResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{3}
}

func (x *GetDBCCodeListResponse) GetItems() []*GetDBCCodeResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateTestSignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceDefinitionId string `protobuf:"bytes,1,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	DbcCodesId         string `protobuf:"bytes,2,opt,name=dbc_codes_id,json=dbcCodesId,proto3" json:"dbc_codes_id,omitempty"`
	UserDeviceId       string `protobuf:"bytes,3,opt,name=user_device_id,json=userDeviceId,proto3" json:"user_device_id,omitempty"`
	Trigger            string `protobuf:"bytes,4,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Name               string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Value              string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateTestSignalRequest) Reset() {
	*x = CreateTestSignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestSignalRequest) ProtoMessage() {}

func (x *CreateTestSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestSignalRequest.ProtoReflect.Descriptor instead.
func (*CreateTestSignalRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTestSignalRequest) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *CreateTestSignalRequest) GetDbcCodesId() string {
	if x != nil {
		return x.DbcCodesId
	}
	return ""
}

func (x *CreateTestSignalRequest) GetUserDeviceId() string {
	if x != nil {
		return x.UserDeviceId
	}
	return ""
}

func (x *CreateTestSignalRequest) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

func (x *CreateTestSignalRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTestSignalRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UpdateTestSignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceDefinitionId string `protobuf:"bytes,2,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	DbcCodesId         string `protobuf:"bytes,3,opt,name=dbc_codes_id,json=dbcCodesId,proto3" json:"dbc_codes_id,omitempty"`
	UserDeviceId       string `protobuf:"bytes,4,opt,name=user_device_id,json=userDeviceId,proto3" json:"user_device_id,omitempty"`
	Trigger            string `protobuf:"bytes,5,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Name               string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Value              string `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdateTestSignalRequest) Reset() {
	*x = UpdateTestSignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestSignalRequest) ProtoMessage() {}

func (x *UpdateTestSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestSignalRequest.ProtoReflect.Descriptor instead.
func (*UpdateTestSignalRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTestSignalRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTestSignalRequest) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *UpdateTestSignalRequest) GetDbcCodesId() string {
	if x != nil {
		return x.DbcCodesId
	}
	return ""
}

func (x *UpdateTestSignalRequest) GetUserDeviceId() string {
	if x != nil {
		return x.UserDeviceId
	}
	return ""
}

func (x *UpdateTestSignalRequest) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

func (x *UpdateTestSignalRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTestSignalRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetTestSignalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceDefinitionId string                 `protobuf:"bytes,2,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	DbcCodesId         string                 `protobuf:"bytes,3,opt,name=dbc_codes_id,json=dbcCodesId,proto3" json:"dbc_codes_id,omitempty"`
	UserDeviceId       string                 `protobuf:"bytes,4,opt,name=user_device_id,json=userDeviceId,proto3" json:"user_device_id,omitempty"`
	Trigger            string                 `protobuf:"bytes,5,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Name               string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Value              string                 `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GetTestSignalResponse) Reset() {
	*x = GetTestSignalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestSignalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestSignalResponse) ProtoMessage() {}

func (x *GetTestSignalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestSignalResponse.ProtoReflect.Descriptor instead.
func (*GetTestSignalResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{6}
}

func (x *GetTestSignalResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTestSignalResponse) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *GetTestSignalResponse) GetDbcCodesId() string {
	if x != nil {
		return x.DbcCodesId
	}
	return ""
}

func (x *GetTestSignalResponse) GetUserDeviceId() string {
	if x != nil {
		return x.UserDeviceId
	}
	return ""
}

func (x *GetTestSignalResponse) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

func (x *GetTestSignalResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTestSignalResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetTestSignalResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetTestSignalResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetTestSignalListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetTestSignalResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetTestSignalListResponse) Reset() {
	*x = GetTestSignalListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestSignalListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestSignalListResponse) ProtoMessage() {}

func (x *GetTestSignalListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestSignalListResponse.ProtoReflect.Descriptor instead.
func (*GetTestSignalListResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{7}
}

func (x *GetTestSignalListResponse) GetItems() []*GetTestSignalResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

type VehicleSignalBaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *VehicleSignalBaseResponse) Reset() {
	*x = VehicleSignalBaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleSignalBaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleSignalBaseResponse) ProtoMessage() {}

func (x *VehicleSignalBaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleSignalBaseResponse.ProtoReflect.Descriptor instead.
func (*VehicleSignalBaseResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{8}
}

func (x *VehicleSignalBaseResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIdRequest) Reset() {
	*x = GetByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdRequest) ProtoMessage() {}

func (x *GetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdRequest.ProtoReflect.Descriptor instead.
func (*GetByIdRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{9}
}

func (x *GetByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_pkg_grpc_vehicle_signal_decoding_proto protoreflect.FileDescriptor

var file_pkg_grpc_vehicle_signal_decoding_proto_rawDesc = []byte{
	0x0a, 0x26, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x62, 0x63, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x62, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x5d, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x62, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x62, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x62, 0x63, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x62, 0x63,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x48,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x62, 0x63, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x62,
	0x63, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0c, 0x64, 0x62, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x62, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xdb, 0x02, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x62, 0x63, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x62, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4e, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2b, 0x0a, 0x19, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0x85, 0x07, 0x0a, 0x1c, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x14,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5b, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x73, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x12, 0x14,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x44, 0x49, 0x4d, 0x4f, 0x2d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x2d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2d, 0x64, 0x65, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_grpc_vehicle_signal_decoding_proto_rawDescOnce sync.Once
	file_pkg_grpc_vehicle_signal_decoding_proto_rawDescData = file_pkg_grpc_vehicle_signal_decoding_proto_rawDesc
)

func file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP() []byte {
	file_pkg_grpc_vehicle_signal_decoding_proto_rawDescOnce.Do(func() {
		file_pkg_grpc_vehicle_signal_decoding_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_grpc_vehicle_signal_decoding_proto_rawDescData)
	})
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescData
}

var file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pkg_grpc_vehicle_signal_decoding_proto_goTypes = []interface{}{
	(*CreateDBCCodeRequest)(nil),      // 0: grpc.CreateDBCCodeRequest
	(*UpdateDBCCodeRequest)(nil),      // 1: grpc.UpdateDBCCodeRequest
	(*GetDBCCodeResponse)(nil),        // 2: grpc.GetDBCCodeResponse
	(*GetDBCCodeListResponse)(nil),    // 3: grpc.GetDBCCodeListResponse
	(*CreateTestSignalRequest)(nil),   // 4: grpc.CreateTestSignalRequest
	(*UpdateTestSignalRequest)(nil),   // 5: grpc.UpdateTestSignalRequest
	(*GetTestSignalResponse)(nil),     // 6: grpc.GetTestSignalResponse
	(*GetTestSignalListResponse)(nil), // 7: grpc.GetTestSignalListResponse
	(*VehicleSignalBaseResponse)(nil), // 8: grpc.VehicleSignalBaseResponse
	(*GetByIdRequest)(nil),            // 9: grpc.GetByIdRequest
	(*timestamppb.Timestamp)(nil),     // 10: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),             // 11: google.protobuf.Empty
}
var file_pkg_grpc_vehicle_signal_decoding_proto_depIdxs = []int32{
	10, // 0: grpc.GetDBCCodeResponse.created_at:type_name -> google.protobuf.Timestamp
	10, // 1: grpc.GetDBCCodeResponse.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 2: grpc.GetDBCCodeListResponse.items:type_name -> grpc.GetDBCCodeResponse
	10, // 3: grpc.GetTestSignalResponse.created_at:type_name -> google.protobuf.Timestamp
	10, // 4: grpc.GetTestSignalResponse.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 5: grpc.GetTestSignalListResponse.items:type_name -> grpc.GetTestSignalResponse
	0,  // 6: grpc.VehicleSignalDecodingService.CreateDBCCode:input_type -> grpc.CreateDBCCodeRequest
	1,  // 7: grpc.VehicleSignalDecodingService.UpdateDBCCode:input_type -> grpc.UpdateDBCCodeRequest
	11, // 8: grpc.VehicleSignalDecodingService.GetDBCCodes:input_type -> google.protobuf.Empty
	9,  // 9: grpc.VehicleSignalDecodingService.GetDBCCodesById:input_type -> grpc.GetByIdRequest
	4,  // 10: grpc.VehicleSignalDecodingService.CreateTestSignal:input_type -> grpc.CreateTestSignalRequest
	5,  // 11: grpc.VehicleSignalDecodingService.UpdateTestSignal:input_type -> grpc.UpdateTestSignalRequest
	11, // 12: grpc.VehicleSignalDecodingService.GetTestSignals:input_type -> google.protobuf.Empty
	9,  // 13: grpc.VehicleSignalDecodingService.GetTestSignalsByDeviceDefinitionId:input_type -> grpc.GetByIdRequest
	9,  // 14: grpc.VehicleSignalDecodingService.GetTestSignalsByUserDeviceId:input_type -> grpc.GetByIdRequest
	9,  // 15: grpc.VehicleSignalDecodingService.GetTestSignalsByDBCCodeId:input_type -> grpc.GetByIdRequest
	9,  // 16: grpc.VehicleSignalDecodingService.GetTestSignalById:input_type -> grpc.GetByIdRequest
	8,  // 17: grpc.VehicleSignalDecodingService.CreateDBCCode:output_type -> grpc.VehicleSignalBaseResponse
	8,  // 18: grpc.VehicleSignalDecodingService.UpdateDBCCode:output_type -> grpc.VehicleSignalBaseResponse
	3,  // 19: grpc.VehicleSignalDecodingService.GetDBCCodes:output_type -> grpc.GetDBCCodeListResponse
	2,  // 20: grpc.VehicleSignalDecodingService.GetDBCCodesById:output_type -> grpc.GetDBCCodeResponse
	8,  // 21: grpc.VehicleSignalDecodingService.CreateTestSignal:output_type -> grpc.VehicleSignalBaseResponse
	8,  // 22: grpc.VehicleSignalDecodingService.UpdateTestSignal:output_type -> grpc.VehicleSignalBaseResponse
	7,  // 23: grpc.VehicleSignalDecodingService.GetTestSignals:output_type -> grpc.GetTestSignalListResponse
	7,  // 24: grpc.VehicleSignalDecodingService.GetTestSignalsByDeviceDefinitionId:output_type -> grpc.GetTestSignalListResponse
	7,  // 25: grpc.VehicleSignalDecodingService.GetTestSignalsByUserDeviceId:output_type -> grpc.GetTestSignalListResponse
	7,  // 26: grpc.VehicleSignalDecodingService.GetTestSignalsByDBCCodeId:output_type -> grpc.GetTestSignalListResponse
	6,  // 27: grpc.VehicleSignalDecodingService.GetTestSignalById:output_type -> grpc.GetTestSignalResponse
	17, // [17:28] is the sub-list for method output_type
	6,  // [6:17] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_grpc_vehicle_signal_decoding_proto_init() }
func file_pkg_grpc_vehicle_signal_decoding_proto_init() {
	if File_pkg_grpc_vehicle_signal_decoding_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDBCCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDBCCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDBCCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDBCCodeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestSignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTestSignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestSignalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestSignalListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleSignalBaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_grpc_vehicle_signal_decoding_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_grpc_vehicle_signal_decoding_proto_goTypes,
		DependencyIndexes: file_pkg_grpc_vehicle_signal_decoding_proto_depIdxs,
		MessageInfos:      file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes,
	}.Build()
	File_pkg_grpc_vehicle_signal_decoding_proto = out.File
	file_pkg_grpc_vehicle_signal_decoding_proto_rawDesc = nil
	file_pkg_grpc_vehicle_signal_decoding_proto_goTypes = nil
	file_pkg_grpc_vehicle_signal_decoding_proto_depIdxs = nil
}
