// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: pkg/grpc/vehicle_signal_decoding.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PIDConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Header          uint32 `protobuf:"varint,2,opt,name=header,proto3" json:"header,omitempty"`
	Mode            uint32 `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	Pid             uint32 `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
	Formula         string `protobuf:"bytes,5,opt,name=formula,proto3" json:"formula,omitempty"`
	IntervalSeconds uint32 `protobuf:"varint,6,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"`
	Protocol        string `protobuf:"bytes,7,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *PIDConfig) Reset() {
	*x = PIDConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PIDConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PIDConfig) ProtoMessage() {}

func (x *PIDConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PIDConfig.ProtoReflect.Descriptor instead.
func (*PIDConfig) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{0}
}

func (x *PIDConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PIDConfig) GetHeader() uint32 {
	if x != nil {
		return x.Header
	}
	return 0
}

func (x *PIDConfig) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *PIDConfig) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *PIDConfig) GetFormula() string {
	if x != nil {
		return x.Formula
	}
	return ""
}

func (x *PIDConfig) GetIntervalSeconds() uint32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

func (x *PIDConfig) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type PIDRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateName string       `protobuf:"bytes,1,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	Version      string       `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Requests     []*PIDConfig `protobuf:"bytes,3,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *PIDRequests) Reset() {
	*x = PIDRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PIDRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PIDRequests) ProtoMessage() {}

func (x *PIDRequests) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PIDRequests.ProtoReflect.Descriptor instead.
func (*PIDRequests) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{1}
}

func (x *PIDRequests) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *PIDRequests) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PIDRequests) GetRequests() []*PIDConfig {
	if x != nil {
		return x.Requests
	}
	return nil
}

type SettingsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SafetyCutOutVoltage             float64 `protobuf:"fixed64,1,opt,name=safety_cut_out_voltage,json=safetyCutOutVoltage,proto3" json:"safety_cut_out_voltage,omitempty"`
	SleepTimerEventDrivenPeriodSecs float64 `protobuf:"fixed64,2,opt,name=sleep_timer_event_driven_period_secs,json=sleepTimerEventDrivenPeriodSecs,proto3" json:"sleep_timer_event_driven_period_secs,omitempty"`
	WakeTriggerVoltageLevel         float64 `protobuf:"fixed64,3,opt,name=wake_trigger_voltage_level,json=wakeTriggerVoltageLevel,proto3" json:"wake_trigger_voltage_level,omitempty"`
}

func (x *SettingsData) Reset() {
	*x = SettingsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsData) ProtoMessage() {}

func (x *SettingsData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsData.ProtoReflect.Descriptor instead.
func (*SettingsData) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{2}
}

func (x *SettingsData) GetSafetyCutOutVoltage() float64 {
	if x != nil {
		return x.SafetyCutOutVoltage
	}
	return 0
}

func (x *SettingsData) GetSleepTimerEventDrivenPeriodSecs() float64 {
	if x != nil {
		return x.SleepTimerEventDrivenPeriodSecs
	}
	return 0
}

func (x *SettingsData) GetWakeTriggerVoltageLevel() float64 {
	if x != nil {
		return x.WakeTriggerVoltageLevel
	}
	return 0
}

type DeviceSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateName string        `protobuf:"bytes,1,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	Settings     *SettingsData `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	Name         string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Version      string        `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeviceSetting) Reset() {
	*x = DeviceSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceSetting) ProtoMessage() {}

func (x *DeviceSetting) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceSetting.ProtoReflect.Descriptor instead.
func (*DeviceSetting) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{3}
}

func (x *DeviceSetting) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *DeviceSetting) GetSettings() *SettingsData {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *DeviceSetting) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceSetting) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type DeviceSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateName  string         `protobuf:"bytes,1,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	DeviceSetting *DeviceSetting `protobuf:"bytes,2,opt,name=device_setting,json=deviceSetting,proto3" json:"device_setting,omitempty"`
}

func (x *DeviceSettingsResponse) Reset() {
	*x = DeviceSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceSettingsResponse) ProtoMessage() {}

func (x *DeviceSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceSettingsResponse.ProtoReflect.Descriptor instead.
func (*DeviceSettingsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{4}
}

func (x *DeviceSettingsResponse) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *DeviceSettingsResponse) GetDeviceSetting() *DeviceSetting {
	if x != nil {
		return x.DeviceSetting
	}
	return nil
}

type CreateDBCCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DbcContents      string `protobuf:"bytes,2,opt,name=dbc_contents,json=dbcContents,proto3" json:"dbc_contents,omitempty"`
	Header           int32  `protobuf:"varint,3,opt,name=header,proto3" json:"header,omitempty"`
	Trigger          string `protobuf:"bytes,4,opt,name=trigger,proto3" json:"trigger,omitempty"`
	RecordingEnabled bool   `protobuf:"varint,5,opt,name=recording_enabled,json=recordingEnabled,proto3" json:"recording_enabled,omitempty"`
	MaxSampleSize    int32  `protobuf:"varint,6,opt,name=max_sample_size,json=maxSampleSize,proto3" json:"max_sample_size,omitempty"`
}

func (x *CreateDBCCodeRequest) Reset() {
	*x = CreateDBCCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDBCCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDBCCodeRequest) ProtoMessage() {}

func (x *CreateDBCCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDBCCodeRequest.ProtoReflect.Descriptor instead.
func (*CreateDBCCodeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDBCCodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDBCCodeRequest) GetDbcContents() string {
	if x != nil {
		return x.DbcContents
	}
	return ""
}

func (x *CreateDBCCodeRequest) GetHeader() int32 {
	if x != nil {
		return x.Header
	}
	return 0
}

func (x *CreateDBCCodeRequest) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

func (x *CreateDBCCodeRequest) GetRecordingEnabled() bool {
	if x != nil {
		return x.RecordingEnabled
	}
	return false
}

func (x *CreateDBCCodeRequest) GetMaxSampleSize() int32 {
	if x != nil {
		return x.MaxSampleSize
	}
	return 0
}

type UpdateDBCCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DbcContents      string `protobuf:"bytes,3,opt,name=dbc_contents,json=dbcContents,proto3" json:"dbc_contents,omitempty"`
	Header           int32  `protobuf:"varint,4,opt,name=header,proto3" json:"header,omitempty"`
	Trigger          string `protobuf:"bytes,5,opt,name=trigger,proto3" json:"trigger,omitempty"`
	RecordingEnabled bool   `protobuf:"varint,6,opt,name=recording_enabled,json=recordingEnabled,proto3" json:"recording_enabled,omitempty"`
	MaxSampleSize    int32  `protobuf:"varint,7,opt,name=max_sample_size,json=maxSampleSize,proto3" json:"max_sample_size,omitempty"`
}

func (x *UpdateDBCCodeRequest) Reset() {
	*x = UpdateDBCCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDBCCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDBCCodeRequest) ProtoMessage() {}

func (x *UpdateDBCCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDBCCodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateDBCCodeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDBCCodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDBCCodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDBCCodeRequest) GetDbcContents() string {
	if x != nil {
		return x.DbcContents
	}
	return ""
}

func (x *UpdateDBCCodeRequest) GetHeader() int32 {
	if x != nil {
		return x.Header
	}
	return 0
}

func (x *UpdateDBCCodeRequest) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

func (x *UpdateDBCCodeRequest) GetRecordingEnabled() bool {
	if x != nil {
		return x.RecordingEnabled
	}
	return false
}

func (x *UpdateDBCCodeRequest) GetMaxSampleSize() int32 {
	if x != nil {
		return x.MaxSampleSize
	}
	return 0
}

type GetDBCCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DbcContents      string                 `protobuf:"bytes,3,opt,name=dbc_contents,json=dbcContents,proto3" json:"dbc_contents,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Header           int32                  `protobuf:"varint,6,opt,name=header,proto3" json:"header,omitempty"`
	Trigger          string                 `protobuf:"bytes,7,opt,name=trigger,proto3" json:"trigger,omitempty"`
	RecordingEnabled bool                   `protobuf:"varint,8,opt,name=recording_enabled,json=recordingEnabled,proto3" json:"recording_enabled,omitempty"`
	MaxSampleSize    int32                  `protobuf:"varint,9,opt,name=max_sample_size,json=maxSampleSize,proto3" json:"max_sample_size,omitempty"`
}

func (x *GetDBCCodeResponse) Reset() {
	*x = GetDBCCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDBCCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDBCCodeResponse) ProtoMessage() {}

func (x *GetDBCCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDBCCodeResponse.ProtoReflect.Descriptor instead.
func (*GetDBCCodeResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{7}
}

func (x *GetDBCCodeResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDBCCodeResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDBCCodeResponse) GetDbcContents() string {
	if x != nil {
		return x.DbcContents
	}
	return ""
}

func (x *GetDBCCodeResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetDBCCodeResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetDBCCodeResponse) GetHeader() int32 {
	if x != nil {
		return x.Header
	}
	return 0
}

func (x *GetDBCCodeResponse) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

func (x *GetDBCCodeResponse) GetRecordingEnabled() bool {
	if x != nil {
		return x.RecordingEnabled
	}
	return false
}

func (x *GetDBCCodeResponse) GetMaxSampleSize() int32 {
	if x != nil {
		return x.MaxSampleSize
	}
	return 0
}

type GetDBCCodeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetDBCCodeResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetDBCCodeListResponse) Reset() {
	*x = GetDBCCodeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDBCCodeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDBCCodeListResponse) ProtoMessage() {}

func (x *GetDBCCodeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDBCCodeListResponse.ProtoReflect.Descriptor instead.
func (*GetDBCCodeListResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{8}
}

func (x *GetDBCCodeListResponse) GetItems() []*GetDBCCodeResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateTestSignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceDefinitionId string `protobuf:"bytes,1,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	DbcCodesId         string `protobuf:"bytes,2,opt,name=dbc_codes_id,json=dbcCodesId,proto3" json:"dbc_codes_id,omitempty"`
	UserDeviceId       string `protobuf:"bytes,3,opt,name=user_device_id,json=userDeviceId,proto3" json:"user_device_id,omitempty"`
	AutopiUnitId       string `protobuf:"bytes,4,opt,name=autopi_unit_id,json=autopiUnitId,proto3" json:"autopi_unit_id,omitempty"`
	Approved           bool   `protobuf:"varint,5,opt,name=approved,proto3" json:"approved,omitempty"`
	Value              string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateTestSignalRequest) Reset() {
	*x = CreateTestSignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTestSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTestSignalRequest) ProtoMessage() {}

func (x *CreateTestSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTestSignalRequest.ProtoReflect.Descriptor instead.
func (*CreateTestSignalRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{9}
}

func (x *CreateTestSignalRequest) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *CreateTestSignalRequest) GetDbcCodesId() string {
	if x != nil {
		return x.DbcCodesId
	}
	return ""
}

func (x *CreateTestSignalRequest) GetUserDeviceId() string {
	if x != nil {
		return x.UserDeviceId
	}
	return ""
}

func (x *CreateTestSignalRequest) GetAutopiUnitId() string {
	if x != nil {
		return x.AutopiUnitId
	}
	return ""
}

func (x *CreateTestSignalRequest) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

func (x *CreateTestSignalRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UpdateTestSignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceDefinitionId string `protobuf:"bytes,2,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	DbcCodesId         string `protobuf:"bytes,3,opt,name=dbc_codes_id,json=dbcCodesId,proto3" json:"dbc_codes_id,omitempty"`
	UserDeviceId       string `protobuf:"bytes,4,opt,name=user_device_id,json=userDeviceId,proto3" json:"user_device_id,omitempty"`
	AutopiUnitId       string `protobuf:"bytes,5,opt,name=autopi_unit_id,json=autopiUnitId,proto3" json:"autopi_unit_id,omitempty"`
	Approved           bool   `protobuf:"varint,6,opt,name=approved,proto3" json:"approved,omitempty"`
	Value              string `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdateTestSignalRequest) Reset() {
	*x = UpdateTestSignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTestSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestSignalRequest) ProtoMessage() {}

func (x *UpdateTestSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestSignalRequest.ProtoReflect.Descriptor instead.
func (*UpdateTestSignalRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTestSignalRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTestSignalRequest) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *UpdateTestSignalRequest) GetDbcCodesId() string {
	if x != nil {
		return x.DbcCodesId
	}
	return ""
}

func (x *UpdateTestSignalRequest) GetUserDeviceId() string {
	if x != nil {
		return x.UserDeviceId
	}
	return ""
}

func (x *UpdateTestSignalRequest) GetAutopiUnitId() string {
	if x != nil {
		return x.AutopiUnitId
	}
	return ""
}

func (x *UpdateTestSignalRequest) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

func (x *UpdateTestSignalRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetTestSignalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceDefinitionId string                 `protobuf:"bytes,2,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	DbcCodesId         string                 `protobuf:"bytes,3,opt,name=dbc_codes_id,json=dbcCodesId,proto3" json:"dbc_codes_id,omitempty"`
	UserDeviceId       string                 `protobuf:"bytes,4,opt,name=user_device_id,json=userDeviceId,proto3" json:"user_device_id,omitempty"`
	AutopiUnitId       string                 `protobuf:"bytes,5,opt,name=autopi_unit_id,json=autopiUnitId,proto3" json:"autopi_unit_id,omitempty"`
	Approved           bool                   `protobuf:"varint,6,opt,name=approved,proto3" json:"approved,omitempty"`
	Value              string                 `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Signals            string                 `protobuf:"bytes,10,opt,name=signals,proto3" json:"signals,omitempty"`
}

func (x *GetTestSignalResponse) Reset() {
	*x = GetTestSignalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestSignalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestSignalResponse) ProtoMessage() {}

func (x *GetTestSignalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestSignalResponse.ProtoReflect.Descriptor instead.
func (*GetTestSignalResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{11}
}

func (x *GetTestSignalResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTestSignalResponse) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *GetTestSignalResponse) GetDbcCodesId() string {
	if x != nil {
		return x.DbcCodesId
	}
	return ""
}

func (x *GetTestSignalResponse) GetUserDeviceId() string {
	if x != nil {
		return x.UserDeviceId
	}
	return ""
}

func (x *GetTestSignalResponse) GetAutopiUnitId() string {
	if x != nil {
		return x.AutopiUnitId
	}
	return ""
}

func (x *GetTestSignalResponse) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

func (x *GetTestSignalResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetTestSignalResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetTestSignalResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetTestSignalResponse) GetSignals() string {
	if x != nil {
		return x.Signals
	}
	return ""
}

type GetTestSignalListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetTestSignalResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetTestSignalListResponse) Reset() {
	*x = GetTestSignalListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTestSignalListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTestSignalListResponse) ProtoMessage() {}

func (x *GetTestSignalListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTestSignalListResponse.ProtoReflect.Descriptor instead.
func (*GetTestSignalListResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{12}
}

func (x *GetTestSignalListResponse) GetItems() []*GetTestSignalResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

type VehicleSignalBaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *VehicleSignalBaseResponse) Reset() {
	*x = VehicleSignalBaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleSignalBaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleSignalBaseResponse) ProtoMessage() {}

func (x *VehicleSignalBaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleSignalBaseResponse.ProtoReflect.Descriptor instead.
func (*VehicleSignalBaseResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{13}
}

func (x *VehicleSignalBaseResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIdRequest) Reset() {
	*x = GetByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdRequest) ProtoMessage() {}

func (x *GetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdRequest.ProtoReflect.Descriptor instead.
func (*GetByIdRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{14}
}

func (x *GetByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCanBusDumpFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EthAddr string `protobuf:"bytes,1,opt,name=eth_addr,json=ethAddr,proto3" json:"eth_addr,omitempty"`
}

func (x *GetCanBusDumpFileRequest) Reset() {
	*x = GetCanBusDumpFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCanBusDumpFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCanBusDumpFileRequest) ProtoMessage() {}

func (x *GetCanBusDumpFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCanBusDumpFileRequest.ProtoReflect.Descriptor instead.
func (*GetCanBusDumpFileRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{15}
}

func (x *GetCanBusDumpFileRequest) GetEthAddr() string {
	if x != nil {
		return x.EthAddr
	}
	return ""
}

type GetCanBusDumpFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetCanBusDumpFileItemResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetCanBusDumpFileResponse) Reset() {
	*x = GetCanBusDumpFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCanBusDumpFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCanBusDumpFileResponse) ProtoMessage() {}

func (x *GetCanBusDumpFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCanBusDumpFileResponse.ProtoReflect.Descriptor instead.
func (*GetCanBusDumpFileResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{16}
}

func (x *GetCanBusDumpFileResponse) GetItems() []*GetCanBusDumpFileItemResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetCanBusDumpFileItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId    string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FileName  string                 `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileType  string                 `protobuf:"bytes,3,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *GetCanBusDumpFileItemResponse) Reset() {
	*x = GetCanBusDumpFileItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCanBusDumpFileItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCanBusDumpFileItemResponse) ProtoMessage() {}

func (x *GetCanBusDumpFileItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCanBusDumpFileItemResponse.ProtoReflect.Descriptor instead.
func (*GetCanBusDumpFileItemResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{17}
}

func (x *GetCanBusDumpFileItemResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *GetCanBusDumpFileItemResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *GetCanBusDumpFileItemResponse) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *GetCanBusDumpFileItemResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type DownloadCanBusDumpFileContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DownloadCanBusDumpFileContentRequest) Reset() {
	*x = DownloadCanBusDumpFileContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadCanBusDumpFileContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadCanBusDumpFileContentRequest) ProtoMessage() {}

func (x *DownloadCanBusDumpFileContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadCanBusDumpFileContentRequest.ProtoReflect.Descriptor instead.
func (*DownloadCanBusDumpFileContentRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{18}
}

func (x *DownloadCanBusDumpFileContentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DownloadCanBusDumpFileContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *DownloadCanBusDumpFileContentResponse) Reset() {
	*x = DownloadCanBusDumpFileContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadCanBusDumpFileContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadCanBusDumpFileContentResponse) ProtoMessage() {}

func (x *DownloadCanBusDumpFileContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadCanBusDumpFileContentResponse.ProtoReflect.Descriptor instead.
func (*DownloadCanBusDumpFileContentResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{19}
}

func (x *DownloadCanBusDumpFileContentResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type GetJobsByEtherumAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EtherumAddress string `protobuf:"bytes,1,opt,name=etherum_address,json=etherumAddress,proto3" json:"etherum_address,omitempty"`
}

func (x *GetJobsByEtherumAddressRequest) Reset() {
	*x = GetJobsByEtherumAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobsByEtherumAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsByEtherumAddressRequest) ProtoMessage() {}

func (x *GetJobsByEtherumAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobsByEtherumAddressRequest.ProtoReflect.Descriptor instead.
func (*GetJobsByEtherumAddressRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{20}
}

func (x *GetJobsByEtherumAddressRequest) GetEtherumAddress() string {
	if x != nil {
		return x.EtherumAddress
	}
	return ""
}

type GetJobsByEtherumAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetJobsByEtherumAddressItemResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetJobsByEtherumAddressResponse) Reset() {
	*x = GetJobsByEtherumAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobsByEtherumAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsByEtherumAddressResponse) ProtoMessage() {}

func (x *GetJobsByEtherumAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobsByEtherumAddressResponse.ProtoReflect.Descriptor instead.
func (*GetJobsByEtherumAddressResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{21}
}

func (x *GetJobsByEtherumAddressResponse) GetItems() []*GetJobsByEtherumAddressItemResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetJobsByEtherumAddressItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Command       string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastExecution *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_execution,json=lastExecution,proto3" json:"last_execution,omitempty"`
}

func (x *GetJobsByEtherumAddressItemResponse) Reset() {
	*x = GetJobsByEtherumAddressItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobsByEtherumAddressItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsByEtherumAddressItemResponse) ProtoMessage() {}

func (x *GetJobsByEtherumAddressItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobsByEtherumAddressItemResponse.ProtoReflect.Descriptor instead.
func (*GetJobsByEtherumAddressItemResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{22}
}

func (x *GetJobsByEtherumAddressItemResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetJobsByEtherumAddressItemResponse) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *GetJobsByEtherumAddressItemResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetJobsByEtherumAddressItemResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetJobsByEtherumAddressItemResponse) GetLastExecution() *timestamppb.Timestamp {
	if x != nil {
		return x.LastExecution
	}
	return nil
}

type CreateJobByEtherumAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EtherumAddress string `protobuf:"bytes,1,opt,name=etherum_address,json=etherumAddress,proto3" json:"etherum_address,omitempty"`
	Command        string `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *CreateJobByEtherumAddressRequest) Reset() {
	*x = CreateJobByEtherumAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobByEtherumAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobByEtherumAddressRequest) ProtoMessage() {}

func (x *CreateJobByEtherumAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobByEtherumAddressRequest.ProtoReflect.Descriptor instead.
func (*CreateJobByEtherumAddressRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{23}
}

func (x *CreateJobByEtherumAddressRequest) GetEtherumAddress() string {
	if x != nil {
		return x.EtherumAddress
	}
	return ""
}

func (x *CreateJobByEtherumAddressRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type DeleteJobByEtherumAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EtherumAddress string `protobuf:"bytes,1,opt,name=etherum_address,json=etherumAddress,proto3" json:"etherum_address,omitempty"`
	Id             string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteJobByEtherumAddressRequest) Reset() {
	*x = DeleteJobByEtherumAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJobByEtherumAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobByEtherumAddressRequest) ProtoMessage() {}

func (x *DeleteJobByEtherumAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobByEtherumAddressRequest.ProtoReflect.Descriptor instead.
func (*DeleteJobByEtherumAddressRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteJobByEtherumAddressRequest) GetEtherumAddress() string {
	if x != nil {
		return x.EtherumAddress
	}
	return ""
}

func (x *DeleteJobByEtherumAddressRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_pkg_grpc_vehicle_signal_decoding_proto protoreflect.FileDescriptor

var file_pkg_grpc_vehicle_signal_decoding_proto_rawDesc = []byte{
	0x0a, 0x26, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x01, 0x0a,
	0x09, 0x50, 0x49, 0x44, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x79, 0x0a,
	0x0b, 0x50, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x49, 0x44, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x61, 0x66,
	0x65, 0x74, 0x79, 0x5f, 0x63, 0x75, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x76, 0x6f, 0x6c, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x73, 0x61, 0x66, 0x65, 0x74,
	0x79, 0x43, 0x75, 0x74, 0x4f, 0x75, 0x74, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x4d,
	0x0a, 0x24, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x5f, 0x73, 0x65, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1f, 0x73, 0x6c,
	0x65, 0x65, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x73, 0x12, 0x3b, 0x0a,
	0x1a, 0x77, 0x61, 0x6b, 0x65, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x76, 0x6f,
	0x6c, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x17, 0x77, 0x61, 0x6b, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x56, 0x6f,
	0x6c, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x79, 0x0a, 0x16, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xd4, 0x01, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x62, 0x63, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x62, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x78,
	0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0xe4, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x42, 0x43, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x62, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x62, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xd8, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x62, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x62, 0x63, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6d,
	0x61, 0x78, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xeb, 0x01,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x64,
	0x62, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x62, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x70, 0x69, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74,
	0x6f, 0x70, 0x69, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x62, 0x63,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x62, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x70, 0x69, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x70,
	0x69, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x89, 0x03, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x62, 0x63, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x62, 0x63,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x61, 0x75, 0x74, 0x6f, 0x70, 0x69, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x70, 0x69, 0x55, 0x6e, 0x69,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x73, 0x22, 0x4e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2b, 0x0a, 0x19, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x42, 0x75,
	0x73, 0x44, 0x75, 0x6d, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x74, 0x68, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x22, 0x56, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6e, 0x42, 0x75, 0x73, 0x44, 0x75, 0x6d, 0x70, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6e, 0x42, 0x75, 0x73, 0x44, 0x75, 0x6d, 0x70, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x42, 0x75,
	0x73, 0x44, 0x75, 0x6d, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x36, 0x0a, 0x24, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x6e, 0x42, 0x75, 0x73, 0x44, 0x75, 0x6d, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x25, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x6e, 0x42, 0x75, 0x73, 0x44, 0x75, 0x6d,
	0x70, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x49,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x42, 0x79, 0x45, 0x74, 0x68, 0x65, 0x72,
	0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x75, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x62, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x73, 0x42, 0x79, 0x45, 0x74, 0x68, 0x65, 0x72, 0x75, 0x6d, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x42, 0x79, 0x45, 0x74, 0x68, 0x65,
	0x72, 0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe5, 0x01,
	0x0a, 0x23, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x42, 0x79, 0x45, 0x74, 0x68, 0x65, 0x72,
	0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a,
	0x6f, 0x62, 0x42, 0x79, 0x45, 0x74, 0x68, 0x65, 0x72, 0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x75, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x5b, 0x0a, 0x20,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x42, 0x79, 0x45, 0x74, 0x68, 0x65, 0x72,
	0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x75, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0x86, 0x0b, 0x0a, 0x1c, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x12, 0x14,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x42, 0x43, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5b, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x73, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x14,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x42, 0x79, 0x44, 0x42, 0x43, 0x43, 0x6f, 0x64, 0x65,
	0x49, 0x44, 0x12, 0x14, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x12, 0x14,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x42, 0x75, 0x73, 0x44, 0x75,
	0x6d, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6e, 0x42, 0x75, 0x73, 0x44, 0x75, 0x6d, 0x70, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6e, 0x42, 0x75, 0x73, 0x44, 0x75, 0x6d, 0x70, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x16, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x6e, 0x42, 0x75, 0x73, 0x44, 0x75, 0x6d, 0x70, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x43, 0x61, 0x6e, 0x42, 0x75, 0x73, 0x44, 0x75, 0x6d, 0x70, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61,
	0x6e, 0x42, 0x75, 0x73, 0x44, 0x75, 0x6d, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x42, 0x79, 0x45, 0x74, 0x68, 0x65, 0x72, 0x75, 0x6d, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x73, 0x42, 0x79, 0x45, 0x74, 0x68, 0x65, 0x72, 0x75, 0x6d, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x42, 0x79, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62,
	0x73, 0x42, 0x79, 0x45, 0x74, 0x68, 0x65, 0x72, 0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x26, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a,
	0x6f, 0x62, 0x42, 0x79, 0x45, 0x74, 0x68, 0x65, 0x72, 0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x42, 0x79, 0x45, 0x74, 0x68, 0x65, 0x72, 0x75,
	0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f,
	0x62, 0x73, 0x42, 0x79, 0x45, 0x74, 0x68, 0x65, 0x72, 0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x26, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x42, 0x79, 0x45, 0x74, 0x68, 0x65, 0x72, 0x75, 0x6d, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x44, 0x49, 0x4d, 0x4f, 0x2d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x2d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2d, 0x64, 0x65, 0x63,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_grpc_vehicle_signal_decoding_proto_rawDescOnce sync.Once
	file_pkg_grpc_vehicle_signal_decoding_proto_rawDescData = file_pkg_grpc_vehicle_signal_decoding_proto_rawDesc
)

func file_pkg_grpc_vehicle_signal_decoding_proto_rawDescGZIP() []byte {
	file_pkg_grpc_vehicle_signal_decoding_proto_rawDescOnce.Do(func() {
		file_pkg_grpc_vehicle_signal_decoding_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_grpc_vehicle_signal_decoding_proto_rawDescData)
	})
	return file_pkg_grpc_vehicle_signal_decoding_proto_rawDescData
}

var file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_pkg_grpc_vehicle_signal_decoding_proto_goTypes = []interface{}{
	(*PIDConfig)(nil),                             // 0: grpc.PIDConfig
	(*PIDRequests)(nil),                           // 1: grpc.PIDRequests
	(*SettingsData)(nil),                          // 2: grpc.SettingsData
	(*DeviceSetting)(nil),                         // 3: grpc.DeviceSetting
	(*DeviceSettingsResponse)(nil),                // 4: grpc.DeviceSettingsResponse
	(*CreateDBCCodeRequest)(nil),                  // 5: grpc.CreateDBCCodeRequest
	(*UpdateDBCCodeRequest)(nil),                  // 6: grpc.UpdateDBCCodeRequest
	(*GetDBCCodeResponse)(nil),                    // 7: grpc.GetDBCCodeResponse
	(*GetDBCCodeListResponse)(nil),                // 8: grpc.GetDBCCodeListResponse
	(*CreateTestSignalRequest)(nil),               // 9: grpc.CreateTestSignalRequest
	(*UpdateTestSignalRequest)(nil),               // 10: grpc.UpdateTestSignalRequest
	(*GetTestSignalResponse)(nil),                 // 11: grpc.GetTestSignalResponse
	(*GetTestSignalListResponse)(nil),             // 12: grpc.GetTestSignalListResponse
	(*VehicleSignalBaseResponse)(nil),             // 13: grpc.VehicleSignalBaseResponse
	(*GetByIdRequest)(nil),                        // 14: grpc.GetByIdRequest
	(*GetCanBusDumpFileRequest)(nil),              // 15: grpc.GetCanBusDumpFileRequest
	(*GetCanBusDumpFileResponse)(nil),             // 16: grpc.GetCanBusDumpFileResponse
	(*GetCanBusDumpFileItemResponse)(nil),         // 17: grpc.GetCanBusDumpFileItemResponse
	(*DownloadCanBusDumpFileContentRequest)(nil),  // 18: grpc.DownloadCanBusDumpFileContentRequest
	(*DownloadCanBusDumpFileContentResponse)(nil), // 19: grpc.DownloadCanBusDumpFileContentResponse
	(*GetJobsByEtherumAddressRequest)(nil),        // 20: grpc.GetJobsByEtherumAddressRequest
	(*GetJobsByEtherumAddressResponse)(nil),       // 21: grpc.GetJobsByEtherumAddressResponse
	(*GetJobsByEtherumAddressItemResponse)(nil),   // 22: grpc.GetJobsByEtherumAddressItemResponse
	(*CreateJobByEtherumAddressRequest)(nil),      // 23: grpc.CreateJobByEtherumAddressRequest
	(*DeleteJobByEtherumAddressRequest)(nil),      // 24: grpc.DeleteJobByEtherumAddressRequest
	(*timestamppb.Timestamp)(nil),                 // 25: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                         // 26: google.protobuf.Empty
}
var file_pkg_grpc_vehicle_signal_decoding_proto_depIdxs = []int32{
	0,  // 0: grpc.PIDRequests.requests:type_name -> grpc.PIDConfig
	2,  // 1: grpc.DeviceSetting.settings:type_name -> grpc.SettingsData
	3,  // 2: grpc.DeviceSettingsResponse.device_setting:type_name -> grpc.DeviceSetting
	25, // 3: grpc.GetDBCCodeResponse.created_at:type_name -> google.protobuf.Timestamp
	25, // 4: grpc.GetDBCCodeResponse.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 5: grpc.GetDBCCodeListResponse.items:type_name -> grpc.GetDBCCodeResponse
	25, // 6: grpc.GetTestSignalResponse.created_at:type_name -> google.protobuf.Timestamp
	25, // 7: grpc.GetTestSignalResponse.updated_at:type_name -> google.protobuf.Timestamp
	11, // 8: grpc.GetTestSignalListResponse.items:type_name -> grpc.GetTestSignalResponse
	17, // 9: grpc.GetCanBusDumpFileResponse.items:type_name -> grpc.GetCanBusDumpFileItemResponse
	25, // 10: grpc.GetCanBusDumpFileItemResponse.created_at:type_name -> google.protobuf.Timestamp
	22, // 11: grpc.GetJobsByEtherumAddressResponse.items:type_name -> grpc.GetJobsByEtherumAddressItemResponse
	25, // 12: grpc.GetJobsByEtherumAddressItemResponse.created_at:type_name -> google.protobuf.Timestamp
	25, // 13: grpc.GetJobsByEtherumAddressItemResponse.last_execution:type_name -> google.protobuf.Timestamp
	5,  // 14: grpc.VehicleSignalDecodingService.CreateDBCCode:input_type -> grpc.CreateDBCCodeRequest
	6,  // 15: grpc.VehicleSignalDecodingService.UpdateDBCCode:input_type -> grpc.UpdateDBCCodeRequest
	26, // 16: grpc.VehicleSignalDecodingService.GetDBCCodes:input_type -> google.protobuf.Empty
	14, // 17: grpc.VehicleSignalDecodingService.GetDBCCodesByID:input_type -> grpc.GetByIdRequest
	9,  // 18: grpc.VehicleSignalDecodingService.CreateTestSignal:input_type -> grpc.CreateTestSignalRequest
	10, // 19: grpc.VehicleSignalDecodingService.UpdateTestSignal:input_type -> grpc.UpdateTestSignalRequest
	26, // 20: grpc.VehicleSignalDecodingService.GetTestSignals:input_type -> google.protobuf.Empty
	14, // 21: grpc.VehicleSignalDecodingService.GetTestSignalsByDeviceDefinitionID:input_type -> grpc.GetByIdRequest
	14, // 22: grpc.VehicleSignalDecodingService.GetTestSignalsByUserDeviceID:input_type -> grpc.GetByIdRequest
	14, // 23: grpc.VehicleSignalDecodingService.GetTestSignalsByDBCCodeID:input_type -> grpc.GetByIdRequest
	14, // 24: grpc.VehicleSignalDecodingService.GetTestSignalByID:input_type -> grpc.GetByIdRequest
	15, // 25: grpc.VehicleSignalDecodingService.GetCanBusDumpFiles:input_type -> grpc.GetCanBusDumpFileRequest
	18, // 26: grpc.VehicleSignalDecodingService.DownloadCanBusDumpFile:input_type -> grpc.DownloadCanBusDumpFileContentRequest
	20, // 27: grpc.VehicleSignalDecodingService.GetJobsByEtherumAddress:input_type -> grpc.GetJobsByEtherumAddressRequest
	23, // 28: grpc.VehicleSignalDecodingService.CreateJobsByEtherumAddress:input_type -> grpc.CreateJobByEtherumAddressRequest
	24, // 29: grpc.VehicleSignalDecodingService.DeleteJobsByEtherumAddress:input_type -> grpc.DeleteJobByEtherumAddressRequest
	13, // 30: grpc.VehicleSignalDecodingService.CreateDBCCode:output_type -> grpc.VehicleSignalBaseResponse
	13, // 31: grpc.VehicleSignalDecodingService.UpdateDBCCode:output_type -> grpc.VehicleSignalBaseResponse
	8,  // 32: grpc.VehicleSignalDecodingService.GetDBCCodes:output_type -> grpc.GetDBCCodeListResponse
	7,  // 33: grpc.VehicleSignalDecodingService.GetDBCCodesByID:output_type -> grpc.GetDBCCodeResponse
	13, // 34: grpc.VehicleSignalDecodingService.CreateTestSignal:output_type -> grpc.VehicleSignalBaseResponse
	13, // 35: grpc.VehicleSignalDecodingService.UpdateTestSignal:output_type -> grpc.VehicleSignalBaseResponse
	12, // 36: grpc.VehicleSignalDecodingService.GetTestSignals:output_type -> grpc.GetTestSignalListResponse
	12, // 37: grpc.VehicleSignalDecodingService.GetTestSignalsByDeviceDefinitionID:output_type -> grpc.GetTestSignalListResponse
	12, // 38: grpc.VehicleSignalDecodingService.GetTestSignalsByUserDeviceID:output_type -> grpc.GetTestSignalListResponse
	12, // 39: grpc.VehicleSignalDecodingService.GetTestSignalsByDBCCodeID:output_type -> grpc.GetTestSignalListResponse
	11, // 40: grpc.VehicleSignalDecodingService.GetTestSignalByID:output_type -> grpc.GetTestSignalResponse
	16, // 41: grpc.VehicleSignalDecodingService.GetCanBusDumpFiles:output_type -> grpc.GetCanBusDumpFileResponse
	19, // 42: grpc.VehicleSignalDecodingService.DownloadCanBusDumpFile:output_type -> grpc.DownloadCanBusDumpFileContentResponse
	21, // 43: grpc.VehicleSignalDecodingService.GetJobsByEtherumAddress:output_type -> grpc.GetJobsByEtherumAddressResponse
	22, // 44: grpc.VehicleSignalDecodingService.CreateJobsByEtherumAddress:output_type -> grpc.GetJobsByEtherumAddressItemResponse
	26, // 45: grpc.VehicleSignalDecodingService.DeleteJobsByEtherumAddress:output_type -> google.protobuf.Empty
	30, // [30:46] is the sub-list for method output_type
	14, // [14:30] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pkg_grpc_vehicle_signal_decoding_proto_init() }
func file_pkg_grpc_vehicle_signal_decoding_proto_init() {
	if File_pkg_grpc_vehicle_signal_decoding_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PIDConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PIDRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDBCCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDBCCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDBCCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDBCCodeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTestSignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTestSignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestSignalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTestSignalListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleSignalBaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCanBusDumpFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCanBusDumpFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCanBusDumpFileItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadCanBusDumpFileContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadCanBusDumpFileContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobsByEtherumAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobsByEtherumAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobsByEtherumAddressItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobByEtherumAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteJobByEtherumAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_grpc_vehicle_signal_decoding_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_grpc_vehicle_signal_decoding_proto_goTypes,
		DependencyIndexes: file_pkg_grpc_vehicle_signal_decoding_proto_depIdxs,
		MessageInfos:      file_pkg_grpc_vehicle_signal_decoding_proto_msgTypes,
	}.Build()
	File_pkg_grpc_vehicle_signal_decoding_proto = out.File
	file_pkg_grpc_vehicle_signal_decoding_proto_rawDesc = nil
	file_pkg_grpc_vehicle_signal_decoding_proto_goTypes = nil
	file_pkg_grpc_vehicle_signal_decoding_proto_depIdxs = nil
}
